{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'my-5'
  ]
%}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
{% if content['field_carousel_top'] is not empty %}
    <div class="img-wrapper container-fluid d-flex justify-content-center img-fluid">
      {{ content['field_carousel_top'] }}
  <div class="img-overlay">
    <button class="btn btn-lg rounded-0 btn-primary">{{ content['field_carousel_button']['#object'].get('field_carousel_button').value }}</button>
  </div>
</div>
{% endif %}
{% if content['field_title'] is not empty %}
<div class="border border-dark rounded p-5">
{{ content['field_title'] }}
{{ content['field_description'] }}
{{ content['field_image'] }}
{{ content['field_author'] }}
</div>
{% endif %}
{% if content['field_subscribetitle'] is not empty %}
<div class="container-fluid my-5 border rounded border-dark">
<div class="container my-5">
<div class="h1 text-center text-primary">{{ content['field_subscribetitle'] }}</div>
<div class="text-primary">{{ content['field_subscribedescription'] }}</div>
<div class="d-flex my-2">
<input type="email" class="w-75"/>
<button class="btn btn-primary rounded-0 w-25">SUBSCRIBE</button>
</div>
{# <div class="">{{ content['field_email_address'] }}</div> #}
<div class="d-flex"><input type="checkbox"/>{{ content['field_confirmation'] }}</div>
{% endif %}
{% if content['field_network_name'] is not empty %}
<div class="text-primary h1 text-center">{{ content['field_number'] }}</div>
<div class="text-center text-primary">{{ content['field_network_name'] }}</div>
{% endif %}
    {% endblock %}
  </div>
    </div>
{% endblock paragraph %}
{%if content['field_knowledgehubtitle']['#object'].get('field_knowledgehubtitle').value is not null %}
<div class="h1 text-primary">{{content['field_knowledgehubtitle']}}</div>
{{content['field_knowledgehubdescription']}}
{{content['field_knowledge_image']}}
{{content['field_knowledge']}}
{%set url = path('entity.node.canonical', {'node': content.field_button_value['#items'].entity.nid.value})%}
<a href="{{url}}" class="btn btn-primary">view more</a>
{% elseif content['field_knowledge_image']['#object'].get('field_knowledge_image').value is not null %}
{{content['field_knowledge_image']}}
{{content['field_knowledge']}}
{%set url = path('entity.node.canonical', {'node': content.field_button_value['#items'].entity.nid.value})%}
<a href="{{url}}" class="btn btn-primary">view more</a>
{% endif %}
{%if content['field_toolbox_title']['#object'].get('field_toolbox_title').value is not null %}
{{content.field_logo}}
{{content.field_toolbox_title}}
{{content.field_toolbox_description}}
{% endif %}
{%if content['field_tool_title']['#object'].get('field_tool_title').value is not null %}
<div class="d-flex">
{{content['field_tool_title']}}
{%set url = path('entity.node.canonical', {'node': content.field_button['#items'].entity.nid.value})%}
<a href="{{url}}" class="btn rounded-pill btn-primary">SEE MORE</a>
</div>
{% endif %}

